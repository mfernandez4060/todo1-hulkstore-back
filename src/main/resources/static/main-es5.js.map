{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/callback/callback.component.html","./src/app/components/compras/compras.component.html","./src/app/components/home/home.component.html","./src/app/components/inventario/inventario.component.html","./src/app/components/kardex/kardex.component.html","./src/app/components/loading/loading.component.html","./src/app/components/navbar/navbar.component.html","./src/app/components/ventas/ventas.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/callback/callback.component.ts","./src/app/components/compras/compras.component.ts","./src/app/components/home/home.component.ts","./src/app/components/inventario/inventario.component.ts","./src/app/components/kardex/kardex.component.ts","./src/app/components/loading/loading.component.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/ventas/ventas.component.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/kardex.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container m-5\\\">\\r\\n\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \"\\r\\n\"","module.exports = \"<form (ngSubmit)=\\\"guardar(forma)\\\" #forma=\\\"ngForm\\\" novalidate=\\\"\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"producto\\\">Código de Producto</label>\\r\\n        <input [(ngModel)]=\\\"compra.codProducto\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"codProducto\\\" placeholder=\\\"Ingrese el código de producto\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"cantidad\\\">Cantidad</label>\\r\\n        <input [(ngModel)]=\\\"compra.cantidad\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"cantidad\\\" placeholder=\\\"Ingrese la cantidad\\\" min=\\\"0\\\" max=\\\"1000\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"costo\\\">Costo</label>\\r\\n        <input [(ngModel)]=\\\"compra.costo\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"costo\\\" placeholder=\\\"Ingrese el costo\\\" min=\\\"0.00\\\" max=\\\"10000.00\\\" step=\\\"0.01\\\">\\r\\n    </div>\\r\\n    <button [disabled]=\\\"!forma.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form>\\r\\n<br /><br /><br />\\r\\n<div *ngIf=\\\"error\\\" class=\\\"card text-white bg-danger mb-3\\\">\\r\\n  <h5 class=\\\"card-title\\\">Error</h5>\\r\\n  <p class=\\\"card-text\\\">{{message}}</p>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"operacionOk\\\" class=\\\"card text-white bg-success mb-3\\\">\\r\\n  <h5 class=\\\"card-title\\\">Operación Exitosa</h5>\\r\\n</div>\\r\\n\"","module.exports = \"<div *ngIf=\\\"auth.userProfile$ | async as profile\\\">\\r\\n  <div class=\\\"col-md-16\\\">\\r\\n    <h1>Bienvenido !!! {{ profile.name }}</h1>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<app-loading *ngIf=\\\"loading\\\"></app-loading>\\r\\n\\r\\n<div *ngIf=\\\"!loading\\\" class=\\\"row animated fadeIn\\\">\\r\\n\\r\\n  <div class=\\\"col-8\\\">\\r\\n    <h3>Listado de Productos</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-4 text-right\\\">\\r\\n    <button routerLink=\\\"/search\\\" class=\\\"btn btn-outline-danger\\\">Regresar</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!loading\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Código de Producto</th>\\r\\n          <th>Descripción</th>\\r\\n          <th>Tipo Superheroe</th>\\r\\n          <th>Costo</th>\\r\\n          <th>Stock</th>\\r\\n          <th>Fecha última actualización</th>          \\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of inventario\\\" class=\\\"text-black\\\">\\r\\n          <td>{{item.producto.codProducto}}</td>\\r\\n          <td>{{item.producto.descripcion}}</td>\\r\\n          <td>{{item.producto.tipoSuperheroe.nombre}}</td>\\r\\n          <td>{{item.producto.costo}}</td>          \\r\\n          <td>{{item.stock}}</td>\\r\\n          <td>{{item.fechaUltimaActualizacion  | date:'medium' }}</td>          \\r\\n        </tr>\\r\\n      </tbody>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"row m-5\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <input #codproducto type=\\\"text\\\" (keyup)=\\\"buscar(codproducto.value)\\\" class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Buscar producto...\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br />\\r\\n<div *ngIf=\\\"error\\\" class=\\\"card text-white bg-danger mb-3\\\">\\r\\n  <h5 class=\\\"card-title\\\">Error</h5>\\r\\n  <p class=\\\"card-text\\\">{{message}}</p>\\r\\n</div>\\r\\n<br />\\r\\n\\r\\n<app-loading *ngIf=\\\"loading\\\"></app-loading>\\r\\n\\r\\n<div *ngIf=\\\"!loading\\\" class=\\\"row animated fadeIn\\\">\\r\\n  <div class=\\\"col-8 m5\\\">\\r\\n    <h3>Kardex de Producto {{codProducto}}</h3>\\r\\n  </div>\\r\\n  <div class=\\\"col-4 text-right\\\">\\r\\n    <button routerLink=\\\"/search\\\" class=\\\"btn btn-outline-danger\\\">Regresar</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!loading && kardex.length > 0\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Fecha</th>\\r\\n          <th>Codigo Producto</th>\\r\\n          <th>Descripción Producto</th>\\r\\n          <th>Operacion</th>\\r\\n          <th>Valor Unitario</th>\\r\\n          <th>Entrada Cantidad</th>\\r\\n          <th>Entrada Total</th>\\r\\n          <th>Salida Cantidad</th>\\r\\n          <th>Salida Total</th>\\r\\n          <th>Saldo Cantidad</th>\\r\\n          <th>Saldo Total</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of kardex\\\" class=\\\"text-black\\\">\\r\\n          <td>{{item.fecha | date:'medium'}}</td>\\r\\n          <td>{{item.producto.codProducto}}</td>\\r\\n          <td>{{item.producto.descripcion}}</td>\\r\\n          <td>{{item.tipoOperacion.descripcion}}</td>\\r\\n          <td>{{item.valorUnitario | currency:'USD':'symbol':'0.2'}}</td>\\r\\n          <td>{{item.entrada.cantidad}}</td>\\r\\n          <td>{{item.entrada.total | currency:'USD':'symbol':'0.2'}}</td>\\r\\n          <td>{{item.salida.cantidad}}</td>\\r\\n          <td>{{item.salida.total | currency:'USD':'symbol':'0.2'}}</td>\\r\\n          <td class=\\\"table-primary\\\">{{item.saldo.cantidad}}</td>\\r\\n          <td class=\\\"table-primary\\\">{{item.saldo.total  | currency:'USD':'symbol':'0.2'}}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row text-center animated fadeIn m-5\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <i class=\\\"fa fa-sync fa-spin fa-5x\\\"></i>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\"\\r\\n    aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n    <img src=\\\"assets/img/todo1.jpg\\\" width=\\\"130\\\" height=\\\"60\\\" alt=\\\"\\\"> Hulk Store</a>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['home']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"isAuthenticated()\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['inventario']\\\">Inventario</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"isAuthenticated()\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['kardex']\\\">Kardex</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"isAuthenticated()\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['compras']\\\">Compras de Productos</a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"isAuthenticated()\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['ventas']\\\">Ventas de Productos</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <span class=\\\"navbar-text\\\">\\r\\n      <button *ngIf=\\\"!isAuthenticated()\\\" (click)=\\\"login()\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Login</button>\\r\\n    </span>\\r\\n\\r\\n    <span class=\\\"navbar-text\\\">\\r\\n      <button *ngIf=\\\"isAuthenticated()\\\" (click)=\\\"logout()\\\" type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\">Logout</button>\\r\\n    </span>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","module.exports = \"<form (ngSubmit)=\\\"guardar(forma)\\\" #forma=\\\"ngForm\\\" novalidate=\\\"\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"producto\\\">Código de Producto</label>\\r\\n    <input [(ngModel)]=\\\"venta.codProducto\\\" type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"codProducto\\\"\\r\\n      placeholder=\\\"Ingrese el código de producto\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"cantidad\\\">Cantidad</label>\\r\\n    <input [(ngModel)]=\\\"venta.cantidad\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"cantidad\\\"\\r\\n      placeholder=\\\"Ingrese la cantidad\\\" min=\\\"0\\\" max=\\\"1000\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"costo\\\">Precio Venta</label>\\r\\n    <input [(ngModel)]=\\\"venta.costo\\\" type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"costo\\\" placeholder=\\\"Ingrese precio venta\\\"\\r\\n      min=\\\"0.00\\\" max=\\\"10000.00\\\" step=\\\"0.01\\\">\\r\\n  </div>\\r\\n  <button [disabled]=\\\"!forma.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n</form>\\r\\n<br /><br /><br />\\r\\n<div *ngIf=\\\"error\\\" class=\\\"card text-white bg-danger mb-3\\\">\\r\\n  <h5 class=\\\"card-title\\\">Error</h5>\\r\\n  <p class=\\\"card-text\\\">{{message}}</p>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"operacionOk\\\" class=\\\"card text-white bg-success mb-3\\\">\\r\\n  <h5 class=\\\"card-title\\\">Operación Exitosa</h5>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'authapp';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { APP_ROUTING } from './app.routes';\r\nimport { AuthService } from './services/auth.service';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport { KardexComponent } from './components/kardex/kardex.component';\r\nimport { ComprasComponent } from './components/compras/compras.component';\r\nimport { VentasComponent } from './components/ventas/ventas.component';\r\nimport { KardexService } from './services/kardex.service';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    CallbackComponent,\r\n    InventarioComponent,\r\n    KardexComponent,\r\n    ComprasComponent,\r\n    VentasComponent,\r\n    LoadingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    APP_ROUTING\r\n  ],\r\n  providers: [AuthService, AuthGuardService, KardexService] ,\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CallbackComponent } from './components/callback/callback.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport { KardexComponent } from './components/kardex/kardex.component';\r\nimport { ComprasComponent } from './components/compras/compras.component';\r\nimport { VentasComponent } from './components/ventas/ventas.component';\r\n\r\n\r\nconst APP_ROUTES: Routes = [\r\n  { path: 'callback', component: CallbackComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  {\r\n    path: 'inventario',\r\n    component: InventarioComponent\r\n    ,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'kardex',\r\n    component: KardexComponent\r\n    , canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'compras',\r\n    component: ComprasComponent\r\n    , canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'ventas',\r\n    component: VentasComponent\r\n    , canActivate: [AuthGuardService]\r\n  },\r\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\r\n];\r\n\r\nexport const APP_ROUTING = RouterModule.forRoot(APP_ROUTES);\r\nexport class FeatureRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: []\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  constructor(private auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.auth.handleAuthCallback();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { KardexService } from 'src/app/services/kardex.service';\r\n\r\n@Component({\r\n  selector: 'app-compras',\r\n  templateUrl: './compras.component.html',\r\n  styles: [`\r\n  .ng-invalid.ng-touched:not(form){\r\n    border: 1px solid red;\r\n  }\r\n  `]\r\n})\r\nexport class ComprasComponent implements OnInit {\r\n  compra: Object = {\r\n    codProducto: null,\r\n    cantidad: null,\r\n    costo: null\r\n  }\r\n  error: boolean;\r\n  message: string;\r\n  operacionOk: boolean;\r\n\r\n  constructor(private kardexService: KardexService) {\r\n    this.operacionOk = false;\r\n    this.error = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  guardar(forma: NgForm) {\r\n    this.kardexService.comprarProductos(forma.value).subscribe(\r\n      (data: any) => {\r\n        this.error = false;\r\n        this.operacionOk = true;\r\n      }, (error: any) => {\r\n        this.message = `${error.status} ${error.error}`;\r\n        this.error = true;\r\n        this.operacionOk = false;\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styles: []\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(public auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { KardexService } from 'src/app/services/kardex.service';\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styles: []\r\n})\r\nexport class InventarioComponent implements OnInit {\r\n  inventario: any = {};\r\n  loading: boolean;\r\n\r\n\r\n  constructor(private router: ActivatedRoute, private kardexService: KardexService) {\r\n    this.router.params.subscribe(params => {\r\n      this.loading = true;\r\n      this.getInventario();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getInventario() {\r\n    this.kardexService.getInventario().subscribe(inv => {\r\n      this.inventario = inv;\r\n      this.loading = false;\r\n    },error =>{\r\n      console.log(\"error\");\r\n\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { KardexService } from 'src/app/services/kardex.service';\r\n\r\n@Component({\r\n  selector: 'app-kardex',\r\n  templateUrl: './kardex.component.html',\r\n  styles: []\r\n})\r\nexport class KardexComponent implements OnInit {\r\n  kardex: any = {};\r\n  loading: boolean;\r\n  error: boolean;\r\n  message: string;\r\n  codProducto: any;\r\n\r\n  constructor(private router: ActivatedRoute, private kardexService: KardexService) {\r\n    this.router.params.subscribe(params => {\r\n      this.loading = false;\r\n      this.error = false;\r\n      this.codProducto = '';\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getKardex(codproducto: string) {\r\n    this.kardexService.getKardex(codproducto).subscribe(kardex => {\r\n      this.kardex = kardex;\r\n      this.loading = false;\r\n      this.error = false;\r\n    }, error => {\r\n      this.loading = false;\r\n      this.message = error;\r\n      this.message = `${error.status} ${error.error}`;\r\n      this.error = true;\r\n    });\r\n  }\r\n\r\n  buscar(codproducto: string) {\r\n    this.loading = true;\r\n    this.kardexService.getProducto(codproducto).subscribe((data: any) => {\r\n      console.log(data);\r\n\r\n      this.codProducto = data.codProducto;\r\n      this.getKardex(codproducto);\r\n      this.loading = false;\r\n      this.error = false;\r\n    }, (error) => {\r\n      this.loading = false;\r\n      this.message = `${error.status} ${error.error}`;\r\n      this.error = true;\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styles: []\r\n})\r\n\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styles: []\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private auth: AuthService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.auth.localAuthSetup();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.auth.loggedIn;\r\n  }\r\n\r\n  login() {\r\n    this.auth.login();\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n  }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { KardexService } from 'src/app/services/kardex.service';\r\n\r\n@Component({\r\n  selector: 'app-ventas',\r\n  templateUrl: './ventas.component.html',\r\n  styles: [`\r\n  .ng-invalid.ng-touched:not(form){\r\n    border: 1px solid red;\r\n  }\r\n  `]\r\n})\r\n\r\nexport class VentasComponent implements OnInit {\r\n  venta: Object = {\r\n    codProducto: null,\r\n    cantidad: null,\r\n    costo: null\r\n  }\r\n  error: boolean;\r\n  message: string;\r\n  operacionOk: boolean;\r\n\r\n  constructor(private kardexService: KardexService) {\r\n    this.operacionOk = false;\r\n    this.error = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  guardar(forma: NgForm) {\r\n    this.kardexService.venderProductos(forma.value).subscribe(\r\n      (data: any) => {\r\n        this.error = false;\r\n        this.operacionOk = true;\r\n      }, (error: any) => {\r\n        console.log(error);\r\n        this.message = `${error.status} ${error.error}`;\r\n        this.error = true;\r\n        this.operacionOk = false;\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private auth: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n  \r\n    if (this.auth.loggedIn) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\r\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\r\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  // Create an observable of Auth0 instance of client\r\n  auth0Client$ = (from(\r\n    createAuth0Client({\r\n      domain: \"dev-ys93w65q.auth0.com\",\r\n      client_id: \"nnYSyk0KQICzZwfZRPPJNWmI47asiwws\",\r\n      redirect_uri: `${window.location.origin}/callback`\r\n    })\r\n  ) as Observable<Auth0Client>).pipe(\r\n    shareReplay(1), // Every subscription receives the same shared value\r\n    catchError(err => throwError(err))\r\n  );\r\n  // Define observables for SDK methods that return promises by default\r\n  // For each Auth0 SDK method, first ensure the client instance is ready\r\n  // concatMap: Using the client instance, call SDK method; SDK returns a promise\r\n  // from: Convert that resulting promise into an observable\r\n  isAuthenticated$ = this.auth0Client$.pipe(\r\n    concatMap((client: Auth0Client) => from(client.isAuthenticated()))\r\n  );\r\n  handleRedirectCallback$ = this.auth0Client$.pipe(\r\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\r\n  );\r\n  // Create subject and public observable of user profile data\r\n  private userProfileSubject$ = new BehaviorSubject<any>(null);\r\n  userProfile$ = this.userProfileSubject$.asObservable();\r\n  // Create a local property for login status\r\n  loggedIn: boolean = null;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // getUser$() is a method because options can be passed if desired\r\n  // https://auth0.github.io/auth0-spa-js/classes/auth0client.html#getuser\r\n  getUser$(options?): Observable<any> {\r\n    return this.auth0Client$.pipe(\r\n      concatMap((client: Auth0Client) => from(client.getUser(options)))\r\n    );\r\n  }\r\n\r\n  localAuthSetup() {\r\n    // This should only be called on app initialization\r\n    // Set up local authentication streams\r\n    const checkAuth$ = this.isAuthenticated$.pipe(\r\n      concatMap((loggedIn: boolean) => {\r\n        if (loggedIn) {\r\n          // If authenticated, get user data\r\n          return this.getUser$();\r\n        }\r\n        // If not authenticated, return stream that emits 'false'\r\n        return of(loggedIn);\r\n      })\r\n    );\r\n    const checkAuthSub = checkAuth$.subscribe((response: { [key: string]: any } | boolean) => {\r\n      // If authenticated, response will be user object\r\n      // If not authenticated, response will be 'false'\r\n      // Set subjects appropriately\r\n      if (response) {\r\n        const user = response;\r\n        this.userProfileSubject$.next(user);\r\n      }\r\n      this.loggedIn = !!response;\r\n      // Clean up subscription\r\n      checkAuthSub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  login(redirectPath: string = '/') {\r\n    // A desired redirect path can be passed to login method\r\n    // (e.g., from a route guard)\r\n    // Ensure Auth0 client instance exists\r\n    this.auth0Client$.subscribe((client: Auth0Client) => {\r\n      // Call method to log in\r\n      client.loginWithRedirect({\r\n        redirect_uri: `${window.location.origin}/callback`,\r\n        appState: { target: redirectPath }\r\n      });\r\n    });\r\n  }\r\n\r\n  handleAuthCallback() {\r\n    // Only the callback component should call this method\r\n    // Call when app reloads after user logs in with Auth0\r\n    let targetRoute: string; // Path to redirect to after login processsed\r\n    // Ensure Auth0 client instance exists\r\n    const authComplete$ = this.auth0Client$.pipe(\r\n      // Have client, now call method to handle auth callback redirect\r\n      concatMap(() => this.handleRedirectCallback$),\r\n      tap(cbRes => {\r\n        // Get and set target redirect route from callback results\r\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\r\n      }),\r\n      concatMap(() => {\r\n        // Redirect callback complete; create stream\r\n        // returning user data and authentication status\r\n        return combineLatest(\r\n          this.getUser$(),\r\n          this.isAuthenticated$\r\n        );\r\n      })\r\n    );\r\n    // Subscribe to authentication completion observable\r\n    // Response will be an array of user and login status\r\n    authComplete$.subscribe(([user, loggedIn]) => {\r\n      // Update subjects and loggedIn property\r\n      this.userProfileSubject$.next(user);\r\n      this.loggedIn = loggedIn;\r\n      // Redirect to target route after callback processing\r\n      this.router.navigate([targetRoute]);\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    // Ensure Auth0 client instance exists\r\n    this.auth0Client$.subscribe((client: Auth0Client) => {\r\n      // Call method to log out\r\n      client.logout({\r\n        client_id: \"nnYSyk0KQICzZwfZRPPJNWmI47asiwws\",\r\n        returnTo: `${window.location.origin}`\r\n      });\r\n    });\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KardexService {\r\n  token = '';\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getQuery(query: string) {\r\n    const url = `/api/v1${query}`;\r\n    const headers = new HttpHeaders({ Authorization: `'Bearer ${this.token}'` });\r\n\r\n    return this.http.get(url, { headers });\r\n  }\r\n\r\n  getPost(query: string, data: any) {\r\n    const url = `api/v1${query}`;\r\n    const headers = new HttpHeaders({ Authorization: `'Bearer ${this.token}'` });\r\n\r\n    return this.http.post(url, data, { headers });\r\n  }\r\n\r\n  getInventario() {\r\n    return this.getQuery('/inventario/');\r\n  }\r\n\r\n  getProducto(codproducto: string) {\r\n    return this.getQuery(`/productos/${codproducto}`);\r\n  }\r\n\r\n  comprarProductos(compra: Object) {\r\n    return this.getPost('/operaciones/producto/compra', compra);\r\n  }\r\n\r\n  venderProductos(venta: any) {\r\n    return this.getPost('/operaciones/producto/venta', venta);\r\n  }\r\n\r\n  getKardex(codproducto: string) {\r\n    return this.getQuery(`/kardex/${codproducto}`);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}